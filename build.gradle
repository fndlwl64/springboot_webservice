//buildscript{ /*별도의 외부 라이브러리를 가져오기 위한 설정*/
//    ext{ /*build.gradle 에서 사용할 전역변수 설정*/
//        springBootVersion = '2.7.1'
//    }
//    repositories{
//        mavenCentral()
//        jcenter()
//    }
//    dependencies {
//        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
//    }
//}
//
///*buildscript 에서 선언한 플러그인들을 적용할 것인지 결정하는 설정*/
//apply plugin: 'java'
//apply plugin: 'eclipse'
//apply plugin: 'org.springframework.boot'
//apply plugin: 'io.spring.dependency-management' /*스프링 부트의 의존성을 관리해주는 플러그인*/
plugins {
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}
//group 'com.spring.book'
//version '1.0-SNAPSHOT'
//sourceCompatibility=11

repositories {
    mavenCentral()
    jcenter()
}

dependencies { /*프로젝트 개발에 필요한 의존성 설정*/
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.projectlombok:lombok')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')/*JPA*/
    runtimeOnly('org.mariadb.jdbc:mariadb-java-client')/*Maria 데이터베이스*/
    runtimeOnly('com.h2database:h2')/*H2 데이터베이스*/
    implementation('org.springframework.session:spring-session-jdbc')/*데이터베이스 세션 저장소*/
    implementation('org.springframework.boot:spring-boot-starter-mustache')
    implementation('org.springframework.boot:spring-boot-starter-oauth2-client')/*OAuth2*/

//    testImplementation('org.springframework.boot:spring-boot-starter-test')
    implementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.security:spring-security-test')

    annotationProcessor('org.projectlombok:lombok')
}

test{
    useJUnitPlatform()
}